# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
imports:
    - { resource: "@ApplicationSonataUserBundle/Resources/config/security.yml"}

security:

    # acl:
    #     connection: default

    role_hierarchy:
        # if sonata_admin-security-handler: sonata.admin.security.handler.role
        # for convenience, I decided to gather Sonata roles here
        ROLE_ADMIN_SITEBUILDER:
            - ROLE_APP_ADMIN_MENU_ALL #ALL = LIST, VIEW, CREATE, EDIT, DELETE and EXPORT
            - ROLE_APP_ADMIN_PAGE_ALL
            - ROLE_APP_ADMIN_CONTENT_ALL
            - ROLE_APP_ADMIN_MENU_PAGE_ALL
            - ROLE_APP_ADMIN_PAGE_CONTENT_ALL
        ROLE_ADMIN_DATA:
            - ROLE_APP_ADMIN_MENU_LIST
            - ROLE_APP_ADMIN_PAGE_ALL
            - ROLE_APP_ADMIN_CONTENT_LIST
            - ROLE_APP_ADMIN_G_LIST_ALL
            - ROLE_APP_ADMIN_G_LISTITEM_ALL
            - ROLE_APP_ADMIN_STRUCTURE_ALL
        # ROLE_SONATA_FOO_READER:
        #     - ROLE_SONATA_ADMIN_DEMO_FOO_LIST
        #     - ROLE_SONATA_ADMIN_DEMO_FOO_VIEW
        # ROLE_SONATA_FOO_EDITOR:
        #     - ROLE_SONATA_ADMIN_DEMO_FOO_CREATE
        #     - ROLE_SONATA_ADMIN_DEMO_FOO_EDIT
        # ROLE_SONATA_FOO_ADMIN:
        #     - ROLE_SONATA_ADMIN_DEMO_FOO_DELETE
        #     - ROLE_SONATA_ADMIN_DEMO_FOO_EXPORT

        # those are the roles I will use (less verbose)
        ROLE_PRO:               [ROLE_USER]
        ROLE_ADMIN:             [ROLE_USER, ROLE_PRO]
        ROLE_INTEGRATOR:        [ROLE_ADMIN, ROLE_ADMIN_SITEBUILDER]
        ROLE_ADMIN_METIER:      [ROLE_ADMIN, ROLE_ADMIN_DATA]
        ROLE_ADMIN_USER:        [ROLE_ADMIN, ROLE_INTEGRATOR]
        ROLE_SUPER_ADMIN:       [ROLE_ADMIN, ROLE_INTEGRATOR, ROLE_ADMIN_USER, ROLE_ADMIN_METIER, ROLE_SONATA_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # set access_strategy to unanimous, else you may have unexpected behaviors
    # access_decision_manager:
    #     strategy: unanimous

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

         # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/pro/, role: [ROLE_PRO, ROLE_ADMIN, ROLE_SONATA_ADMIN]}

    firewalls:
        main:
            form_login:
                use_forward:    true